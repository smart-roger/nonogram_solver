Репозиторий для выпускного проекта курса "Алгоритмы ...." в ОТУС.

Программа "решает" японские кроссворды (ноограммы). Реализация на С++.
Подробнее о правилах: https://ru.wikipedia.org/wiki/%D0%AF%D0%BF%D0%BE%D0%BD%D1%81%D0%BA%D0%B8%D0%B9_%D0%BA%D1%80%D0%BE%D1%81%D1%81%D0%B2%D0%BE%D1%80%D0%B4

Для решения используются несколько "подходов" анализирующих последовательность данных.
https://www.nonograms.ru/methods

Чтобы не тратить время на реализацию ГУИ предлагается сделать консольное приложение, которое будет принимать на вход:
Число строк и столбцов, занчения для каждой строки и столбца.

По окончании ввода программа начнёт "решать кроссворд и выводить в консоль состояние картинки после каждого шага.
Предполагается также вести статистику быстродействия и операций.

Сами кроссворды для тестов и демонстрации планируется брать тут (надеюсь авторы сайта не обидятся :) ): https://www.nonograms.ru/nonograms

Предполагаемые структуры данных:
Каждая клетка "поля" может иметь три состояния: закрашена, свободна, неопределено.
Для простоты вывода на консоль, при хранении состояния планируется использовать обычные байтовые символы предполагается использовать обычные.

Анализ будет проводиться по "линиям". И столбец и строка - линия. Принципиальной разницы в их анализе нет. Очевидно "линии" будут представлять из себя обычные строки с рядом операций.
В зависимости от "этапа" разгадывания к "линии" будут применяться различные методы поиска новых ячеек.

Само поле будет храниться в массиве байтов M*N как обычная матрица.
При модификации имеет смысл запоминать строку и столбец, в которых были сделаны изменения для их приоритетного анализа на следующем шаге.